name: C/C++ CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - name: update apt
      run: sudo apt-get -y update
    - name: install packages
      run: sudo apt-get install libgtk-3-dev build-essential checkinstall gfortran
    - name: install OpenGL libraries
      run: sudo apt-get install mesa-utils
    - name: install freeGlut
      run: sudo apt-get install freeglut3-dev
    - name: install mathgl
      run: sudo apt-get install mathgl libmgl-dev
    - name: install lapack
      run: sudo apt-get install liblapack3 liblapack-dev libopenblas-base libopenblas-dev liblapack-dev liblapacke-dev
    - name: extract WX
      run: tar -xvjf wxWidgets-3.0.5.tar.bz2
    - name: create WXBuildDIR
      working-directory: wxWidgets-3.0.5
      run: mkdir gtk-build
    - name: configure WX
      working-directory: wxWidgets-3.0.5/gtk-build
      run: ../configure --enable-unicode --with-opengl --with-libpng
    - name: compile WX
      working-directory: wxWidgets-3.0.5/gtk-build
      run: make
    - name: install WX
      working-directory: wxWidgets-3.0.5/gtk-build
      run: sudo make install
    - name: set WX Include DIR
      run: echo "WXDIRInclude=/usr/local/include/wx-3.0" >> $GITHUB_ENV
    - name: set RapidXML DIR
      run: echo "RapidXML_DIR=${GITHUB_WORKSPACE}/rapidxml-1.13" >> $GITHUB_ENV
    - name: set PATH
      run: echo "PATH=/usr/local/include/wx-3.0:$PATH" >> $GITHUB_ENV
    - name: copy ubuntu Makefile
      run: cp ./GUI/UbuntuGUI.mk ./GUI/GUI.mk
    - name: compile tbstudio
      run: make -e
    - name: create debian package
      run: |
        working-directory: Packaging/debian/tbstudio/DEBIAN
        sed -i 's/%version/${{ github.ref }}/g' control
        sudo dpkg-deb --build tbstudio
        sudo chmod 777 tbstudio.deb
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Packaging/debian/tbstudio/DEBIAN/tbstudio.deb
        asset_name: tbstudio-${{ github.ref }}.deb
        asset_content_type: application/vnd.debian.binary-package
