name: TBStudio CI-CD

on:
  push:
    tags:
      - 'v*.*.*'

jobs:

  build-windows-latest:

    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v1
    - name: set CodeLiteDir DIR
      run: echo "CodeLiteDir=${GITHUB_WORKSPACE}\wxconfig" >> $env:GITHUB_ENV
    - name: set RapidXML DIR
      run: echo "RapidXML_DIR=${GITHUB_WORKSPACE}\rapidxml-1.13" >> $env:GITHUB_ENV
    - name: set WXWIN
      run: echo "WXWIN=${GITHUB_WORKSPACE}\wxWidgets-3.1.1" >> $env:GITHUB_ENV
    - name: set TDM-GCC-64
      run: echo "GCC_DIR=${GITHUB_WORKSPACE}\TDM-GCC-64" >> $env:GITHUB_ENV
    - name: set GFORTRAN_DIR
      run: echo "GFORTRAN_DIR=${GITHUB_WORKSPACE}\TDM-GCC-64\gcc-5.1.0-tdm64-1-fortran" >> $env:GITHUB_ENV
    - name: set WXCFG
      run: echo "WXCFG=gcc_dll\mswu" >> $env:GITHUB_ENV
    - name: set Opengl_DIR
      run: echo "Opengl_DIR=${GITHUB_WORKSPACE}\TDM-GCC-64\x86_64-w64-mingw32\lib" >> $env:GITHUB_ENV
    - name: set MathGL_DIR
      run: echo "MathGL_DIR=${GITHUB_WORKSPACE}\WindowsDependencies\MathGL64LGPL" >> $env:GITHUB_ENV
    - name: set LAPACKE_DIR
      run: echo "LAPACKE_DIR=${GITHUB_WORKSPACE}\WindowsDependencies\LAPACKE-X64" >> $env:GITHUB_ENV
    - name: set Glut_DIR
      run: echo "Glut_DIR=${GITHUB_WORKSPACE}\WindowsDependencies\freeglut64" >> $env:GITHUB_ENV
    - name: set Gemmi_DIR
      run: echo "Gemmi_DIR=${GITHUB_WORKSPACE}\WindowsDependencies\gemmi-master" >> $env:GITHUB_ENV
    - name: set path1
      run: echo "PATH=%CodeLiteDir%;%PATH%" >> $env:GITHUB_ENV
    - name: set path2
      run: echo "PATH=%WXWIN%\lib\gcc_dll;%GCC_DIR%\bin;%PATH%" >> $env:GITHUB_ENV
    - name: set path3
      run: echo "PATH=%MathGL_DIR%\bin;%PATH%" >> $env:GITHUB_ENV
    - name: set path4
      run: echo "PATH=%Glut_DIR%\bin;%PATH%" >> $env:GITHUB_ENV
    - name: set path5
      run: echo "PATH=%LAPACKE_DIR%;%PATH%" >> $env:GITHUB_ENV
    - name: set path6
      run: echo "PATH=%GFORTRAN_DIR%\bin;%PATH%" >> $env:GITHUB_ENV
    - name: copy Windows Makefile
      run: cp .\GUI\WindowsGUI.mk .\GUI\GUI.mk
    - name: compile tbstudio
      run: |
        make -e
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: executable
        path: .\GUI\Release\tbstudio


  release-windows-latest:

    runs-on: windows-latest
    needs: build
        
    steps:
    - uses: actions/checkout@v1
    - name: Get Version
      id: version
      uses: battila7/get-version-action@v2
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: executable
        path: .\Packaging\debian\tbstudio\usr\bin
    - name: Change permission
      working-directory: Packaging\debian\tbstudio\usr\bin
      run: sudo chmod 777 tbstudio
    - name: set debian package version
      uses: jacobtomlinson/gha-find-replace@v2
      with:
        find: "%version"
        replace: ${{ steps.version.outputs.version-without-v }}
        include: "Packaging\debian\tbstudio\DEBIAN\control"
    - name: create debian package
      working-directory: Packaging\debian
      run: |
        sudo dpkg-deb --build tbstudio
        sudo chmod 777 tbstudio.deb
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version-without-v }}
        release_name: Release ${{ steps.version.outputs.version-without-v }}
        draft: false
        prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .\Packaging\debian\tbstudio.deb
        asset_name: tbstudio-windows-latest-x64-${{ steps.version.outputs.version-without-v }}.deb
        asset_content_type: application/vnd.debian.binary-package