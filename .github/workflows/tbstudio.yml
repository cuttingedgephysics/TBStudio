name: TBStudio CI-CD

on:
  push:
    tags:
      - 'v*.*.*'

jobs:

  build-macos-11:

    runs-on: macos-11
    
    steps:
    - uses: actions/checkout@v1
#     - uses: maxim-lobanov/setup-xcode@v1
#       with:
#         xcode-version: '11.7'
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: install lapack
      run: ls /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs
    - name: install package managers
      run: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        wget https://github.com/macports/macports-base/releases/download/v2.7.1/MacPorts-2.7.1-11-BigSur.pkg
        sudo installer -pkg ./MacPorts-2.7.1-11-BigSur.pkg -target /
    - name: set PATH
      run: echo "/opt/local/bin" >> $GITHUB_PATH
    - name: install mathgl
      run: sudo port install mathgl
    - name: install lapack
      run: brew install lapack
    - name: install llvm clang
      run: brew install llvm
    - name: install base64
      run: brew install base64
#     - name: extract WX
#       run: tar -xvjf wxWidgets-3.0.5.tar.bz2
#     - name: create WXBuildDIR
#       working-directory: wxWidgets-3.0.5
#       run: mkdir gtk-build
#     - name: compile WX
#       working-directory: wxWidgets-3.0.5/gtk-build
#       #../configure --enable-unicode --with-opengl --with-libpng --with-macosx-version-min=12.1 --with-macosx-sdk=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/ CC=clang CXX=clang --disable-debug --disable-debug_flag
#       #../configure --enable-unicode --with-opengl --with-libpng --with-macosx-version-min=12.1
#       run: |
#         ../configure --enable-unicode --with-opengl --with-libpng --with-macosx-version-min=10.11
#         make
#         sudo make install
#         sudo update_dyld_shared_cache
#     - name: dir packages
#       run: |
#         ls /usr/local/opt/lapack
#         ls /usr/local/opt/llvm
#     - name: set env vars
#       run: |
#         echo "WXDIRInclude=/usr/local/include/wx-3.0" >> $GITHUB_ENV
#         echo "RapidXML_DIR=${GITHUB_WORKSPACE}/rapidxml-1.13" >> $GITHUB_ENV
#         echo "MATHGL_INCLUDE=/opt/local/include" >> $GITHUB_ENV
#         echo "LAPACKE_INCLUDE=/usr/local/opt/lapack/include" >> $GITHUB_ENV
#     - name: set PATH
#       run: |
#         echo "PATH=/usr/local/include/wx-3.0:$PATH" >> $GITHUB_ENV
#         echo "PATH=/usr/local/bin:$PATH" >> $GITHUB_ENV
#         echo "PATH=/usr/local/opt/llvm/bin:$PATH" >> $GITHUB_ENV
#         echo "PATH=/usr/local/opt/lapack/bin:$PATH" >> $GITHUB_ENV
#     - name: copy ubuntu Makefile
#       run: cp ./GUI/MacOSGUI.mk ./GUI/GUI.mk
#     - name: compile tbstudio
#       run: |
#         make -e
#         mv ./GUI/Release/GUI ./GUI/Release/tbstudio
    - uses: suisei-cn/actions-download-file@v1
      id: example
      name: Download the file
      with:
        url: "https://dl.dropboxusercontent.com/s/gava8mvljfx4qxp/TBStudio?dl=0"
        target: Packaging/sign
    - name: copy apple certificate
      working-directory: Packaging/sign
      run: |
        cp ../macos/AppleIncRootCertificate.cer ./AppleIncRootCertificate.cer
        cp ../macos/AppleWWDRCAG3.cer ./AppleWWDRCAG3.cer
    - name: sign tbstudio1
      working-directory: Packaging/sign
      run: chmod 777 TBStudio
    - name: sign tbstudio2
      working-directory: Packaging/sign
      run: echo '${{ secrets.MACCERTIFICATE }}' | base64 --decode > tbstudio.pfx
    - name: convert pfx to p12
      working-directory: Packaging/sign
#       run: keytool -importkeystore -destkeystore tbstudio.p12 -deststoretype pkcs12 -destkeypass '${{ secrets.MACCERTIFICATE_PASS }}' -srckeystore tbstudio.pfx
      run: keytool -importkeystore -destkeystore tbstudio.p12 -deststoretype pkcs12 -destkeypass '${{ secrets.MACCERTIFICATE_PASS }}' -deststorepass '${{ secrets.MACCERTIFICATE_PASS }}' -srckeystore tbstudio.pfx -srcstorepass '${{ secrets.MACCERTIFICATE_PASS }}'
    - name: sign tbstudio3
      working-directory: Packaging/sign
      run: |
        security create-keychain -p '${{ secrets.KEYCHAIN_PASS }}' build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p '${{ secrets.KEYCHAIN_PASS }}' build.keychain
    - name: sign tbstudio4
      working-directory: Packaging/sign
      run: security import ./tbstudio.p12 -k build.keychain -P '${{ secrets.MACCERTIFICATE_PASS }}' -T /usr/bin/codesign -T /usr/bin/security -T /usr/bin/productbuild
    - name: sign tbstudio5
      working-directory: Packaging/sign
      run: |
        sudo security import ./AppleWWDRCAG3.cer -k build.keychain -T /usr/bin/codesign -T /usr/bin/security -T /usr/bin/productbuild
    - name: add apple developer certificate to the keychain
      working-directory: Packaging/sign
      run: |
        sudo security authorizationdb write com.apple.trust-settings.admin allow
        security add-trusted-cert -d -r trustRoot -k build.keychain AppleIncRootCertificate.cer
    - name: sign tbstudio5
      working-directory: Packaging/sign
      run: |
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k '${{ secrets.KEYCHAIN_PASS }}' build.keychain
    - name: get identity id
      working-directory: Packaging/sign
      run: |
        security find-identity
        identityid=$(security find-identity -v)
        echo $(security find-identity -v)
        echo $identityid
    - name: sign tbstudio6
      working-directory: Packaging/sign
      run: /usr/bin/codesign --force -s "32723AE3388FA3ABC02958BA2F93128D85761261" ./TBStudio -v
#       run: /usr/bin/codesign -s ./tbstudio.p12 ./TBStudio
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: executable
        path: ./GUI/Release/tbstudio
        
