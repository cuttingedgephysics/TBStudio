name: C/C++ CI

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:

    runs-on: fedora-30
    
    steps:
    - uses: actions/checkout@v1
#    - name: update yum
#      run: sudo yum update
    - name: install packages
      run: sudo yum install gfortran
    - name: install OpenGL libraries
      run: sudo dnf install glx-utils
    - name: install freeGlut
      run: sudo yum install freeglut-devel
    - name: install mathgl
      run: sudo dnf install mathgl-devel mathgl libmgl mathgl-fltk
    - name: install lapack
      run: sudo dnf install blas blas-devel lapack lapack-devel
    - name: install gtk3
      run: sudo dnf install gtk3-devel
    - name: install make
      run: sudo dnf install make
    - name: install clang
      run: sudo dnf install clang
    - name: extract WX
      run: tar -xvjf wxWidgets-3.0.5.tar.bz2
    - name: create WXBuildDIR
      working-directory: wxWidgets-3.0.5
      run: mkdir gtk-build
    - name: configure WX
      working-directory: wxWidgets-3.0.5/gtk-build
      run: ../configure --enable-unicode --with-opengl --with-libpng
    - name: compile WX
      working-directory: wxWidgets-3.0.5/gtk-build
      run: make
    - name: install WX
      working-directory: wxWidgets-3.0.5/gtk-build
      run: sudo make install
    - name: set WX Include DIR
      run: echo "WXDIRInclude=/usr/local/include/wx-3.0" >> $GITHUB_ENV
    - name: set RapidXML DIR
      run: echo "RapidXML_DIR=${GITHUB_WORKSPACE}/rapidxml-1.13" >> $GITHUB_ENV
    - name: set PATH
      run: echo "PATH=/usr/local/include/wx-3.0:$PATH" >> $GITHUB_ENV
    - name: copy ubuntu Makefile
      run: cp ./GUI/UbuntuGUI.mk ./GUI/GUI.mk
    - name: compile tbstudio
      run: |
        make -e
        mv ./GUI/Release/GUI ./GUI/Release/tbstudio
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: executable
        path: ./GUI/Release/tbstudio


  release:

    runs-on: fedora-30
    needs: build
        
    steps:
    - uses: actions/checkout@v1
    - name: Get Version
      id: version
      uses: battila7/get-version-action@v2
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: executable
        path: ./Packaging/debian/tbstudio/usr/bin
    - name: Change permission
      working-directory: Packaging/debian/tbstudio/usr/bin
      run: sudo chmod 777 tbstudio
    - name: set debian package version
      uses: jacobtomlinson/gha-find-replace@v2
      with:
        find: "%version"
        replace: ${{ steps.version.outputs.version-without-v }}
        include: "Packaging/debian/tbstudio/DEBIAN/control"
    - name: create debian package
      working-directory: Packaging/debian
      run: |
        sudo dpkg-deb --build tbstudio
        sudo chmod 777 tbstudio.deb
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version-without-v }}
        release_name: Release ${{ steps.version.outputs.version-without-v }}
        draft: false
        prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Packaging/debian/tbstudio.deb
        asset_name: tbstudio-fedora-30-x64-${{ steps.version.outputs.version-without-v }}.deb
        asset_content_type: application/vnd.debian.binary-package

